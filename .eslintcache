[{"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\App.js":"1","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\HomePage.js":"2","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\AddBookPage.js":"3","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\index.js":"4","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\BookPage.js":"5","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\components\\Header.js":"6","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\components\\Footer.js":"7","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\reportWebVitals.js":"8","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\AboutPage.js":"9","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\components\\BookCard.js":"10","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\EditBookPage.js":"11","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\Welcome.js":"12","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\Dashboard.js":"13","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\EditUserPage.js":"14","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\LogInPage.js":"15","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\RegisterPage.js":"16"},{"size":1355,"mtime":1608732668786,"results":"17","hashOfConfig":"18"},{"size":3179,"mtime":1608889343335,"results":"19","hashOfConfig":"18"},{"size":4032,"mtime":1608615691220,"results":"20","hashOfConfig":"18"},{"size":266,"mtime":1606448659087,"results":"21","hashOfConfig":"18"},{"size":4003,"mtime":1608889354487,"results":"22","hashOfConfig":"18"},{"size":2168,"mtime":1611235242308,"results":"23","hashOfConfig":"18"},{"size":148,"mtime":1606494483890,"results":"24","hashOfConfig":"18"},{"size":362,"mtime":1606402012857,"results":"25","hashOfConfig":"18"},{"size":1803,"mtime":1606991969878,"results":"26","hashOfConfig":"18"},{"size":1628,"mtime":1608706270428,"results":"27","hashOfConfig":"18"},{"size":5072,"mtime":1608638211168,"results":"28","hashOfConfig":"18"},{"size":6511,"mtime":1608079663252,"results":"29","hashOfConfig":"18"},{"size":2081,"mtime":1611234517924,"results":"30","hashOfConfig":"18"},{"size":5258,"mtime":1608702066566,"results":"31","hashOfConfig":"18"},{"size":3606,"mtime":1611234531675,"results":"32","hashOfConfig":"18"},{"size":4386,"mtime":1608742708149,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"9csqo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\App.js",[],["77","78"],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\HomePage.js",["79"],"import {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport BookCard from '../components/BookCard'\r\n\r\nconst HomePage = () => {\r\n    const [BookList, SetBookList] = useState([]);\r\n    const [Wishlist, SetWishlist] = useState([]);\r\n    const [IsLoading, SetIsLoading] = useState(false);\r\n\r\n    const userId = localStorage.getItem('userId');\r\n    const userToken = localStorage.getItem('token');\r\n\r\n    // Fetch books from server\r\n    const fetchBooks = () => {\r\n        axios\r\n        .get(\"http://localhost:5000/books\")\r\n        .then((res) => {\r\n          SetBookList(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    // Fetch user from server\r\n    const fetchUser = () => {\r\n        const uID = localStorage.getItem('userId');\r\n        axios\r\n        .get(`http://localhost:5000/users/${uID}`)\r\n        .then((res) => {\r\n            SetWishlist(res.data.wishlist);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // Start Loading data from server\r\n        SetIsLoading(true);\r\n\r\n        // Fetch books from server\r\n        fetchBooks();\r\n\r\n        // Fetch user from server\r\n        if(userId !== null){\r\n          fetchUser();\r\n        }\r\n        else{\r\n          // Do something\r\n        }\r\n        \r\n\r\n        // Done Loading data from server\r\n        SetIsLoading(false);\r\n\r\n      },[]);\r\n\r\n      // Wishlist Status\r\n      const wishlistStatus = (id) => {\r\n        let newWishlist;\r\n        if(userId === null){\r\n          window.location.href = \"/login\";\r\n        }\r\n        else{\r\n        if(Wishlist.includes(id)){\r\n          newWishlist = Wishlist.filter(item => item !== id);\r\n        }\r\n        else{\r\n          newWishlist = [...Wishlist, id];\r\n        }\r\n      \r\n      SetWishlist(newWishlist)\r\n      SetWishlist((state) => {\r\n      //console.log(state)\r\n\r\n      const formData = new FormData();\r\n      for(var x = 0; x < state.length; x++) {\r\n        formData.append('wishlist', state[x])\r\n      }\r\n      const config = {\r\n          headers: {\r\n            'content-type': 'multipart/form-data',\r\n            'Authorization': `token ${userToken}`\r\n          }\r\n      };\r\n  \r\n      axios\r\n        .put(\r\n          `http://localhost:5000/users/wishlist/${userId}`, formData, config\r\n        )\r\n        .then((res) => console.log(res.data))\r\n        .catch((err) => console.log(err));\r\n\r\n          return state;\r\n      })\r\n    }\r\n      };\r\n\r\n    return (\r\n        <main>   \r\n            <div className=\"books_warp\">\r\n                {\r\n                    (IsLoading) ? \r\n                    <p>Loading data...</p> : BookList.map((book) => \r\n                    <BookCard\r\n                    key={book._id}\r\n                    id={book._id}\r\n                    BookCover={book.cover}\r\n                    BookName={book.name}\r\n                    BookAuthor={book.author}\r\n                    BookPrice={book.price}\r\n                    wishlist={Wishlist.includes(book._id)}\r\n                    action={wishlistStatus}\r\n                    />\r\n                )   \r\n                }\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default HomePage;",["80","81"],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\AddBookPage.js",[],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\index.js",[],["82","83"],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\BookPage.js",["84"],"import {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\nconst BookPage = () => {\r\n    const [Book, SetBook] = useState({\r\n        id:\"\",\r\n        name:\"\",\r\n        author:\"\",\r\n        price:\"\",\r\n        summary:\"\",\r\n        cover:\"\"\r\n    });\r\n    const [Wishlist, SetWishlist] = useState([]);\r\n    const [IsLoading, SetIsLoading] = useState(false);\r\n    let { id } = useParams();\r\n    const userId = localStorage.getItem('userId');\r\n    const userToken = localStorage.getItem('token');\r\n\r\n    // Fetch book from server\r\n    const fetchBook = () => {\r\n        axios\r\n        .get(`http://localhost:5000/books/${id}`)\r\n        .then((res) => {\r\n          SetBook(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    // Fetch user from server\r\n    const fetchUser = () => {\r\n        const uID = localStorage.getItem('userId');\r\n        axios\r\n        .get(`http://localhost:5000/users/${uID}`)\r\n        .then((res) => {\r\n            SetWishlist(res.data.wishlist);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        // Start Loading data from server\r\n        SetIsLoading(true);\r\n\r\n        // Fetch books from server\r\n        fetchBook();\r\n\r\n        // Fetch user from server\r\n        if(userId !== null){\r\n          fetchUser();\r\n        }\r\n        else{\r\n          // Do something\r\n        }\r\n\r\n        // Done Loading data from server\r\n        SetIsLoading(false);\r\n\r\n      },[]);\r\n\r\n      // Wishlist Status\r\n      const wishlistStatus = (id) => {\r\n        let newWishlist;\r\n        if(userId == null){\r\n          window.location.href = \"/login\";\r\n        }\r\n        else{\r\n        if(Wishlist.includes(id)){\r\n          newWishlist = Wishlist.filter(item => item !== id);\r\n        }\r\n        else{\r\n          newWishlist = [...Wishlist, id];\r\n        }\r\n      \r\n      SetWishlist(newWishlist)\r\n      SetWishlist((state) => {\r\n      //console.log(state)\r\n\r\n      const formData = new FormData();\r\n      for(var x = 0; x < state.length; x++) {\r\n        formData.append('wishlist', state[x])\r\n      }\r\n      const config = {\r\n          headers: {\r\n            'content-type': 'multipart/form-data',\r\n            'Authorization': `token ${userToken}`\r\n          }\r\n      };\r\n  \r\n      axios\r\n        .put(\r\n          `http://localhost:5000/users/wishlist/${userId}`, formData, config\r\n        )\r\n        .then((res) => console.log(res.data))\r\n        .catch((err) => console.log(err));\r\n\r\n          return state;\r\n      })\r\n    }\r\n      };\r\n\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"book_page\">\r\n            {\r\n                    (IsLoading) ? \r\n                    <p>Loading data...</p> : \r\n                <div className=\"book_warp\">\r\n                    <div className=\"book_image_box\">\r\n                    <img \r\n                    src={`http://localhost:5000/${Book.cover}`}\r\n                    alt={Book.name}\r\n                    title={Book.name} />\r\n                    </div>\r\n                    <div className=\"book_content\">\r\n                    <div>\r\n                    <h3>By {Book.author}</h3>\r\n                    <h1>{Book.name}</h1>\r\n                    <h4>{Book.price}</h4>\r\n                    <p className=\"book_summary\">{Book.summary}</p>\r\n                    {\r\n                        Wishlist.includes(id) ?\r\n                        <button className=\"btn btn-dark add_to_wishlist\" onClick={wishlistStatus}>Remove from Wishlist</button>\r\n                        :\r\n                        <button className=\"btn btn-dark add_to_wishlist\" onClick={wishlistStatus}>Add to Wishlist</button>\r\n                    }\r\n                    \r\n                    {/* <a href={`./edit/${id}`} className=\"book_edit\" >Edit Book</a> */}\r\n                    </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n}\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default BookPage;","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\components\\Header.js",["85","86","87","88"],"import {useState, useEffect} from \"react\";\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\n\r\nimport Logo from '../assets/logo.png';\r\n\r\nconst Header = () => {\r\n    const [IsNavOpen, SetIsNavOpen] = useState(false);\r\n    // Update Alert Status\r\n    const updateNavStatus = () => {\r\n        SetIsNavOpen(prevState => !prevState)\r\n      };\r\n    return (\r\n        \r\n        <header>\r\n            <div className=\"logo\">\r\n               <a href=\"/\">\r\n                   <img src={Logo}  alt=\"Logo\"/></a>\r\n            </div>\r\n\r\n            <nav>\r\n                <ul className=\"nav\">\r\n                    <li><a href=\"/\">Home</a></li>\r\n                    <li><a href=\"/about\">About</a></li>\r\n                    <li><a href=\"/login\">My Account</a>\r\n                    <ul className=\"nav_sub\">\r\n                        <li><a href=\"/login\">LogIn</a></li>\r\n                        <li><a href=\"/dashboard\">Dashboard</a></li>\r\n                        <li><a href=\"#\">LogOut</a></li>\r\n                    </ul>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n\r\n            <div className=\"humber_menu\" onClick={updateNavStatus}>\r\n\r\n            { \r\n            IsNavOpen ? \r\n            <span className=\"nav_close\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6 16.094l-4.157-4.104 4.1-4.141-1.849-1.849-4.105 4.159-4.156-4.102-1.833 1.834 4.161 4.12-4.104 4.157 1.834 1.832 4.118-4.159 4.143 4.102 1.848-1.849z\"/></svg>\r\n            </span>\r\n            :\r\n            <span className=\"nav_open\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6 17h-12v-2h12v2zm0-4h-12v-2h12v2zm0-4h-12v-2h12v2z\"/></svg>\r\n            </span>\r\n            }\r\n   \r\n                </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\components\\Footer.js",[],["89","90"],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\reportWebVitals.js",[],["91","92"],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\AboutPage.js",[],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\components\\BookCard.js",[],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\EditBookPage.js",["93","94"],"import {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\nconst EditBookPage = () => {\r\n    const [Book, SetBook] = useState({\r\n        name:\"\",\r\n        author:\"\",\r\n        price:\"\",\r\n        summary:\"\",\r\n        cover:null\r\n    });\r\n    const [IsLoading, SetIsLoading] = useState(false);\r\n    let { id } = useParams();\r\n\r\n    // Fetch book from server\r\n    const fetchBook = () => {\r\n        axios\r\n        .get(`http://localhost:5000/books/${id}`)\r\n        .then((res) => {\r\n          SetBook(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        // Start Loading data from server\r\n        SetIsLoading(true);\r\n\r\n        // Fetch books from server\r\n        fetchBook();\r\n\r\n        // Done Loading data from server\r\n        SetIsLoading(false);\r\n\r\n      },[]);\r\n\r\n      // Handel Input Change\r\n      const handleChange = (e) => {\r\n        SetBook({...Book,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      };\r\n\r\n      // Handel Input Change\r\n      const handleFileChange = (e) => {\r\n        SetBook({...Book,\r\n          [e.target.name]: e.target.files[0],\r\n        });\r\n      };\r\n\r\n      // Update book to server\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('name',Book.name);\r\n        formData.append('author',Book.author);\r\n        formData.append('price',Book.price);\r\n        formData.append('summary',Book.summary);\r\n        formData.append('cover',Book.cover);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n    \r\n        axios\r\n          .post(\r\n            `http://localhost:5000/books/update/${id}`, formData, config\r\n          )\r\n          .then((res) => console.log(res.data))\r\n          .catch((err) => console.log(err));\r\n\r\n      };\r\n\r\n      // Delete book to server\r\n      const handleDelete = (e) => {\r\n        e.preventDefault();\r\n    \r\n        axios\r\n          .delete(\r\n            `http://localhost:5000/books/${id}`)\r\n          .then((res) => console.log(res.data))\r\n          .catch((err) => console.log(err));\r\n\r\n      };\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"book_page edit_book_page\">\r\n                <div className=\"edit_book_warp\">\r\n                  <h1 className=\"page_heading\">Edit Book</h1>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  required\r\n                  onChange={handleChange}\r\n                  value={Book.name}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"author\">Author</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"author\"\r\n                  name=\"author\"\r\n                  required\r\n                  onChange={handleChange}\r\n                  value={Book.author}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  required\r\n                  onChange={handleChange}\r\n                  value={Book.price}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"summary\">Summary</label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-textarea\"\r\n                  id=\"summary\"\r\n                  name=\"summary\"\r\n                  required\r\n                  onChange={handleChange}\r\n                  value={Book.summary}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"cover\">Book Cover</label>\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"form-control-file\"\r\n                  id=\"cover\"\r\n                  name=\"cover\"\r\n                  required\r\n                  onChange={handleFileChange}\r\n                />\r\n              </div>\r\n\r\n\r\n              <button type=\"submit\" className=\"btn btn-dark\">\r\n                Update\r\n              </button>\r\n            </form>\r\n\r\n            <div className=\"divider\">Danger Zone</div>\r\n            \r\n            <form onSubmit={handleDelete}>\r\n              <button type=\"submit\" className=\"btn btn-danger\">\r\n                Delete\r\n              </button>\r\n            </form>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default EditBookPage;",["95","96"],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\Welcome.js",[],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\Dashboard.js",["97","98"],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\EditUserPage.js",["99"],"import {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst EditUserPge = () => {\r\n    const [User, SetUser] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        bio:\"\",\r\n        profile:null,\r\n        isAuthor:false,\r\n        myBooks:[],\r\n        wishlist:[],\r\n    });\r\n    const [IsLoading, SetIsLoading] = useState(false);\r\n\r\n    // Fetch user from server\r\n    const fetchUser = () => {\r\n        const uID = localStorage.getItem('userId');\r\n        axios\r\n        .get(`http://localhost:5000/users/${uID}`)\r\n        .then((res) => {\r\n          SetUser(res.data);\r\n          //console.log(res.data);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        // Start Loading data from server\r\n        SetIsLoading(true);\r\n\r\n        // Fetch books from server\r\n        fetchUser();\r\n\r\n        // Done Loading data from server\r\n        SetIsLoading(false);\r\n\r\n      },[]);\r\n\r\n      // Handel Input Change\r\n      const handleChange = (e) => {\r\n        SetUser({...User,\r\n          [e.target.name]: e.target.value,\r\n        });\r\n      };\r\n\r\n      // Handel Input Change\r\n      const handleFileChange = (e) => {\r\n        SetUser({...User,\r\n          [e.target.name]: e.target.files[0],\r\n        });\r\n      };\r\n\r\n      // Update User to server\r\n      const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const userId = localStorage.getItem('userId');\r\n        const userToken = localStorage.getItem('token');\r\n\r\n        const formData = new FormData();\r\n        formData.append('name',User.name);\r\n        formData.append('email',User.email);\r\n        formData.append('password',User.password);\r\n        formData.append('bio',User.bio);\r\n        formData.append('profile',User.profile);\r\n        formData.append('isAuthor',User.isAuthor);\r\n        for(var x = 0; x < User.myBooks.length; x++) {\r\n          formData.append('myBooks', User.myBooks[x])\r\n        }\r\n        for(var y = 0; y < User.wishlist.length; y++) {\r\n          formData.append('wishlist', User.wishlist[y])\r\n        }\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'Authorization': `token ${userToken}`\r\n            }\r\n        };\r\n    \r\n        axios\r\n          .post(\r\n            `http://localhost:5000/users/update/${userId}`, formData, config\r\n          )\r\n          .then((res) => console.log(res.data))\r\n          .catch((err) => console.log(err));\r\n\r\n      };\r\n\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"User_page add_User_page\">\r\n                <div className=\"add_User_warp\">\r\n\r\n                <h1 className=\"page_heading\">Edit User</h1>\r\n                <form onSubmit={handleSubmit}>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  placeholder=\"User Name\"\r\n                  required\r\n                  onChange={handleChange}\r\n                  value={User.name}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Email Address\"\r\n                  required\r\n                  onChange={handleChange}\r\n                  value={User.email}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Your Password\"\r\n                  required\r\n                  onChange={handleChange}\r\n                  value={User.password}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"bio\">Bio</label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control form-control-textarea\"\r\n                  id=\"bio\"\r\n                  name=\"bio\"\r\n                  placeholder=\"Your Bio\"\r\n                  required\r\n                  onChange={handleChange}\r\n                  value={User.bio}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"profile\">User Profile</label>\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"form-control-file\"\r\n                  id=\"profile\"\r\n                  name=\"profile\"\r\n                  required\r\n                  onChange={handleFileChange}\r\n                />\r\n              </div>\r\n\r\n\r\n              <button type=\"submit\" className=\"btn btn-dark\">\r\n              Register User\r\n              </button>\r\n            </form>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default EditUserPge;","F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\LogInPage.js",[],"F:\\projects\\mini-book-store\\mini-book-store-frontend\\src\\pages\\RegisterPage.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":56,"column":9,"nodeType":"106","endLine":56,"endColumn":11,"suggestions":"107"},{"ruleId":"100","replacedBy":"108"},{"ruleId":"102","replacedBy":"109"},{"ruleId":"100","replacedBy":"110"},{"ruleId":"102","replacedBy":"111"},{"ruleId":"104","severity":1,"message":"112","line":62,"column":9,"nodeType":"106","endLine":62,"endColumn":11,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":19,"nodeType":"116","messageId":"117","endLine":1,"endColumn":28},{"ruleId":"114","severity":1,"message":"118","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":23},{"ruleId":"114","severity":1,"message":"119","line":2,"column":25,"nodeType":"116","messageId":"117","endLine":2,"endColumn":29},{"ruleId":"120","severity":1,"message":"121","line":28,"column":29,"nodeType":"122","endLine":28,"endColumn":41},{"ruleId":"100","replacedBy":"123"},{"ruleId":"102","replacedBy":"124"},{"ruleId":"100","replacedBy":"125"},{"ruleId":"102","replacedBy":"126"},{"ruleId":"114","severity":1,"message":"127","line":15,"column":12,"nodeType":"116","messageId":"117","endLine":15,"endColumn":21},{"ruleId":"104","severity":1,"message":"128","line":39,"column":9,"nodeType":"106","endLine":39,"endColumn":11,"suggestions":"129"},{"ruleId":"100","replacedBy":"130"},{"ruleId":"102","replacedBy":"131"},{"ruleId":"114","severity":1,"message":"127","line":9,"column":12,"nodeType":"116","messageId":"117","endLine":9,"endColumn":21},{"ruleId":"104","severity":1,"message":"132","line":54,"column":9,"nodeType":"106","endLine":54,"endColumn":11,"suggestions":"133"},{"ruleId":"114","severity":1,"message":"127","line":15,"column":12,"nodeType":"116","messageId":"117","endLine":15,"endColumn":21},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["136"],["134"],["135"],["134"],["135"],"React Hook useEffect has missing dependencies: 'fetchBook' and 'userId'. Either include them or remove the dependency array.",["137"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["134"],["135"],["134"],["135"],"'IsLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchBook'. Either include it or remove the dependency array.",["138"],["134"],["135"],"React Hook useEffect has missing dependencies: 'fetchUser' and 'userId'. Either include them or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [userId]",{"range":"148","text":"149"},"Update the dependencies array to be: [fetchBook, userId]",{"range":"150","text":"151"},"Update the dependencies array to be: [fetchBook]",{"range":"152","text":"153"},"Update the dependencies array to be: [fetchUser, userId]",{"range":"154","text":"155"},[1393,1395],"[userId]",[1525,1527],"[fetchBook, userId]",[885,887],"[fetchBook]",[1285,1287],"[fetchUser, userId]"]